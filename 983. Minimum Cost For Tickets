class Solution {
    public int mincostTickets(int[] days, int[] costs) {
        int[] dp = new int[days[days.length - 1] +1];
        boolean[] travels = new boolean[days[days.length-1] + 1];
        for (int i=0; i<days.length ; i++) {
            travels[days[i]] = true;
        }
        // dp[0] = costs[0];
        for (int i=1; i<=days[days.length - 1] ; i++) {
            if ( travels[i] == false) {
                dp[i] = dp[i-1];
            } else {
                int cost1 = dp[i-1] + costs[0];
                int cost2 = i>=7 ? dp[i-7] + costs[1] : costs[1];
                int cost3 = i>=30 ? dp[i-30] + costs[2] : costs[2];
                int minOfTwo = Math.min(cost1, cost2);
                dp[i] = Math.min(cost3, minOfTwo);
            }
        }
        return dp[days[days.length - 1]];
    }
}
