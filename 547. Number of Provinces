class Solution {
    public int findCircleNum(int[][] isConnected) {
        List<List<Integer>> adj = new ArrayList<>();

        int n = isConnected.length;
        for (int i=0;i<n+1;i++) {
            adj.add(new ArrayList());
        }
        for (int i=0;i<n;i++) {
            for (int j=0; j<n; j++) {
                if (isConnected[i][j]==1 && i!=j) {
                    adj.get(i+1).add(j+1);
                }
            }
        }
        int[] visit = new int[n+1];
        int count =0 ;
        for (int i=1; i<n+1; i++) {
            if(visit[i]==0) {
                dfs(i,visit,adj);
                count+=1;
            }
        }
        return count;
    }
    void dfs(int start, int[] visit, List<List<Integer>> adj) {
        visit[start] = 1;
        for(int v : adj.get(start)) {
            if (visit[v]==0) {
                dfs(v, visit, adj);
            }
        }
    }
}
